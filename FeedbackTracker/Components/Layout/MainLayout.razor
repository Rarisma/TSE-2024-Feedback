@inherits LayoutComponentBase
@inject NavigationManager NavigationManager
@inject IJSRuntime JSRuntime

<!-- About -->
<!-- condition -->
@if (NavigationManager.Uri.Contains("LogIn") ||
       NavigationManager.Uri.Contains("SignUp") ||
       NavigationManager.Uri.Contains("contact") ||
       NavigationManager.Uri.Contains("about") ||
       NavigationManager.Uri.Contains("privacypolicy") ||
       NavigationManager.Uri.Contains("termsofservice"))
{
    <!-- Page structure -->
    <div class="about-navbar">
        <nav class="d-flex justify-content-around align-items-center h-100">
            <NavLink class="nav-link about-link" href="/about" style="color: #e0e0e0;">About</NavLink>
            <NavLink class="nav-link about-link" href="/termsofservice" style="color: #e0e0e0;">Terms of Service</NavLink>
            <NavLink class="nav-link about-link" href="/privacypolicy" style="color: #e0e0e0;">Privacy Policy</NavLink>
        </nav>
    </div>
}

<!-- Fonts -->
<link href="https://fonts.googleapis.com/css2?family=Lato:wght@400;700&display=swap" rel="stylesheet">
<link href="https://fonts.googleapis.com/css2?family=Poppins:wght@600&display=swap" rel="stylesheet" />
<link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500&display=swap" rel="stylesheet">

<div class="page">
    <div class="sidebar">
        <NavMenu />
    </div>
    <main class="content-area">
        <article class="content px-4">
            @Body
        </article>
    </main>
</div>

<div id="blazor-error-ui">
    An unhandled error has occurred.
    <a href="" class="reload">Reload</a>
    <a class="dismiss">🗙</a>
</div>

@* COLOUR CHANGER *@

@code {
    private string CurrentTheme { get; set; } = "blue"; //hold current items

    //run on first render
    protected override Task OnInitializedAsync()
    {
        //supposed to work when the url is changed
        NavigationManager.LocationChanged += HandleLocationChanged;
        return Task.CompletedTask;
    }

    //event handler for url changes
    private async void HandleLocationChanged(object? sender, LocationChangedEventArgs e)
    {
        //retrieve saved theme
        CurrentTheme = await JSRuntime.InvokeAsync<string?>("localStorage.getItem", "selectedTheme") ?? "blue"; 
        await JSRuntime.InvokeVoidAsync("changeTheme", CurrentTheme);
        await InvokeAsync(StateHasChanged);
    }
}