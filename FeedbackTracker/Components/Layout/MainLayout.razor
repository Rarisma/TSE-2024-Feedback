@inherits LayoutComponentBase
@inject NavigationManager NavigationManager
@inject IJSRuntime JSRuntime

<RadzenComponents @rendermode="InteractiveServer" />

<!-- Fonts -->
<link href="https://fonts.googleapis.com/css2?family=Lato:wght@400;700&display=swap" rel="stylesheet">
<link href="https://fonts.googleapis.com/css2?family=Poppins:wght@600&display=swap" rel="stylesheet" />
<link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500&display=swap" rel="stylesheet">

<!-- Page Structure -->
<RadzenLayout Style="height: 100vh; overflow: hidden; background-color: #2c3e50;">
    <RadzenSidebar Expanded="true" Style="background-color: #2c3e50; padding: 0; overflow-y: hidden; border-right: 1px solid #34495e; width: 240px;">
        <NavMenu />
    </RadzenSidebar>
    
    <RadzenBody Style="background-color: #2c3e50; padding: 10px;">
        <div Style="background: linear-gradient(to bottom right, #f0f0f0, #d0e1f9); height: calc(100% - 0px); padding: 20px; border-radius: 10px; overflow: auto; box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);" class="@CurrentTheme">
            @Body
        </div>
    </RadzenBody>
    
<!-- About -->
<!-- condition -->
@if (NavigationManager.Uri.Contains("login") ||
       NavigationManager.Uri.Contains("SignUp") ||
       NavigationManager.Uri.Contains("contact") ||
       NavigationManager.Uri.Contains("about") ||
       NavigationManager.Uri.Contains("privacypolicy") ||
       NavigationManager.Uri.Contains("termsofservice"))
{
        <RadzenFooter Style="background-color: #2c3e50; color: #ffffff; padding: 0 16px; height: 22px; border-top: 1px solid #34495e;">
        <div Style="display: flex; justify-content: flex-end; align-items: center; width: 100%; font-size: 0.75rem;">
            <NavLink href="/about" Style="color: #dddddd; margin: 0 8px; text-decoration: none; font-size: 0.75rem;">About</NavLink>
            <NavLink href="/termsofservice" Style="color: #dddddd; margin: 0 8px; text-decoration: none; font-size: 0.75rem;">Terms of Service</NavLink>
            <NavLink href="/privacypolicy" Style="color: #dddddd; margin: 0 8px; text-decoration: none; font-size: 0.75rem;">Privacy Policy</NavLink>
        </div>
        </RadzenFooter>
    }      
</RadzenLayout>

<div id="blazor-error-ui">
    An unhandled error has occurred.
    <a href="" class="reload">Reload</a>
    <a class="dismiss">🗙</a>
</div>

@* COLOUR CHANGER *@

@code {
    private string CurrentTheme { get; set; } = "blue"; //hold current items

    //run on first render
    protected override Task OnInitializedAsync()
    {
        //supposed to work when the url is changed
        NavigationManager.LocationChanged += HandleLocationChanged;
        return Task.CompletedTask;
    }

    //event handler for url changes
    private async void HandleLocationChanged(object? sender, LocationChangedEventArgs e)
    {
        //retrieve saved theme
        CurrentTheme = await JSRuntime.InvokeAsync<string?>("localStorage.getItem", "selectedTheme") ?? "blue"; 
        await JSRuntime.InvokeVoidAsync("changeTheme", CurrentTheme);
        await InvokeAsync(StateHasChanged);
    }
}