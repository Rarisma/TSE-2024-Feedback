@inject JAuth auth
@inject NavigationManager NavigationManager
@inject API.UserAPI UserCLient
<input type="checkbox" title="Navigation menu" class="navbar-toggler" />
<div class="nav-scrollable" onclick="document.querySelector('.navbar-toggler').click()">
    <div class="navbar-toggler-wrapper">
        <input type="checkbox" title="Navigation menu" class="navbar-toggler" />
        <div class="nav-scrollable" onclick="document.querySelector('.navbar-toggler').click()">
            <nav class="flex-column">
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                        <span class="bi bi-house-door-fill-nav-menu" aria-hidden="true"></span> Home
                    </NavLink>
                </div>
                @if (auth.IsAuthorised())
                {
                    <div class="nav-item px-3">
                        <NavLink class="nav-link" href="feedback">
                            <span class="bi bi-list-nested-nav-menu" aria-hidden="true"></span> Create Feedback
                        </NavLink>
                    </div>
                    <div class="nav-item px-3">
                        <NavLink class="nav-link" href="usersfeedback">
                            <span class="bi bi-list-nested-nav-menu" aria-hidden="true"></span> Your Feedback @if (New_Feedback) {<span> 🔔 </span>;}else{<span></span>}
                        </NavLink>
                    </div>

                    <!-- Change to IsTeacher later -->
                    @if (user != null && user.IsTeacher)
                    {
                        <div class="nav-item px-3">
                            <NavLink class="nav-link" href="TeacherDashboard">
                                <span class="bi bi-list-nested-nav-menu" aria-hidden="true"></span> Teacher Dashboard
                            </NavLink>
                        </div>
                    }
                    <div class="nav-item px-3">
                        <NavLink class="nav-link" href="settings">
                            <span class="bi bi-list-nested-nav-menu" aria-hidden="true"></span> Settings
                        </NavLink>
                    </div>
                }
            </nav>
        </div>
            

    <!-- Buttons for logging in, signing up and account management -->
    <div class="login-buttons fixed-bottom px-3 pb-3">
        @if (auth.IsAuthorised())
        {
            //<NavLink class="btn btn-primary mb-2 w-100" href="/AccountManagement">Account</NavLink>
            <NavLink class="btn btn-primary mb-2 w-100" href="/Logout">Log out</NavLink>
        }
    </div>

    <!-- Button Styling -->
    <style>
        .btn-primary {
            background-color: #007BFF;
            border-color: #007BFF;
            color: #fff;
        }

            .btn-primary:hover {
                background-color: #0056b3;
                border-color: #0056b3;
            }

        .fixed-bottom {
            position: absolute;
            bottom: 0;
            left: 0;
            right: 0;
        }
    </style>

        @if (NavigationManager.Uri.Contains("LogIn") || NavigationManager.Uri.Contains("SignUp") || NavigationManager.Uri.Contains("contact") || NavigationManager.Uri.Contains("about") || NavigationManager.Uri.Contains("privacypolicy") || NavigationManager.Uri.Contains("termsofservice"))
        {
            <!-- About -->
            <div class="about-navbar">
                <nav class="d-flex justify-content-around align-items-center h-100">
                    <NavLink class="nav-link about-link" href="/about" style="color: #e0e0e0;">About</NavLink>
                    <NavLink class="nav-link about-link" href="/termsofservice" style="color: #e0e0e0;">Terms of Service</NavLink>
                    <NavLink class="nav-link about-link" href="/privacypolicy" style="color: #e0e0e0;">Privacy Policy</NavLink>

                </nav>
            </div>

        }

<style>
    .about-navbar {
        position: fixed;
        bottom: 0;
        left: 0;
        right: 0;
        width: 100%;
        background-color: #2b2b2b;
        color: #fff;
        height: 40px;
        padding: 10px 20px;
        display: flex;
        justify-content: flex-end;
        align-items: center;
    }
</style>


        <!-- Buttons for login/signup/account management -->
        <div class="login-buttons fixed-bottom px-3 pb-3">
            @if (auth.IsAuthorised())
            {
                //<NavLink class="btn btn-primary mb-2 w-100" href="/AccountManagement">Account</NavLink>
                <NavLink class="btn btn-primary mb-2 w-100" href="/Logout">Log Out</NavLink>
            }
            else
            {
                <NavLink class="btn btn-primary mb-2 w-100" href="/contact">Need Help?</NavLink>
            }
        </div>
    </div>
</div>

@code{
    bool New_Feedback = false;
    FeedbackTrackerCommon.Definitions.User? user;
    protected override async Task OnInitializedAsync()
    {
        // if logged in
        if (auth.IsAuthorised())
        {
            user = auth.GetUser();
            // check if user has new feedback

            if (user != null){
                List<FeedbackTrackerCommon.Definitions.Notification?>? notifications = await UserCLient.GetNotification(user.UserID);

                if (notifications.Count > 0){
                    New_Feedback = true;

                    StateHasChanged();
                }else{
                    New_Feedback = false;

                    StateHasChanged();
                }
            }


        }
    }
}



