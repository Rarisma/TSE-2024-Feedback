@page "/LogIn"
@inject IJSRuntime JSRuntime
@using Application.API
@inject NavigationManager NavigationManager
@inject JAuth JAuth
@using Blazored.LocalStorage
@using Serilog
@inject ILocalStorageService LocalStorage

<!-- Authentication method, ran once button is clicked -->
@code {

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            var storedToken = await LocalStorage.GetItemAsStringAsync("UserTok");
            var storedUsername = await LocalStorage.GetItemAsStringAsync("Username");
            if (!string.IsNullOrEmpty(storedToken) && !string.IsNullOrEmpty(storedUsername))
            {
                JAuth.Authorise(storedToken, storedUsername); // Restore session
                StateHasChanged();
                NavigationManager.NavigateTo("/");
            }
        }
    }
    private async Task Submit()
    {
        try
        {
            UserAPI API = new();
            var attempted_user = await API.GetUserByUsername(Username);
            if (attempted_user == null)
            {
                return;
            }
        
            //Check if user has 2FA, if so abort login and show 2fa box.
            int id = attempted_user.UserID;
            if (await API.getMFAStatus(id) && Hide2FA)
            {
                Hide2FA = false;
            }
            else
            {
                string JWT = await API.Authenticate(Username, Password, Code);
                JAuth.Authorise(JWT, Username);
                if (JAuth.IsAuthorised())
                {
                 
                    //User ticked stay logged in, persist to local storage.
                    if (StayLoggedIn)
                    {
                        await LocalStorage.SetItemAsStringAsync("UserTok", JWT);
                        await LocalStorage.SetItemAsStringAsync("Username", Username);
                    }

                    //Login Successful, go to dash.
                    StateHasChanged();
                    NavigationManager.NavigateTo("/");
                }
            }
        }
        catch (Exception ex)
        {
            Log.Error(ex, "Login failed");
        }
    }

    public string Username { get; set; } = "";
    public string Password { get; set; } = "";
    private bool Hide2FA { get; set; } = true;
    public string Code { get; set; } = "0";
    public bool StayLoggedIn { get; set; }

}
@rendermode InteractiveServer
<title>TSE Feedback: Log In </title>
<div class="login-page full-height">
    <!-- Top Section with Logo and Heading -->
    <!-- Image from: https://giphy.com/gifs/sandisk-bubble-loading-speech-2gHUXJe61iM0y7TpNu-->
    <div class="row justify-content-center align-items-center pt-3">
        <div class="col text-center d-flex justify-content-center align-items-center">
            <img src="Images/HomeBubble.gif" alt="Icon" class="logo-icon">
            <h3 class="top-heading">CMP2804-24/25 TSE Feedback Tracking Tool!</h3>
        </div>
    </div>
    <!-- Uni Logo -->
    <div class="row d-flex justify-content-center align-items-center half-height">
        <div class="col-12 col-md-3 d-flex justify-content-center align-items-center">
            <img src="Images/UniLogo.png" alt="Uni Logo" class="uni-logo">
        </div>
        <!-- Login Form-->
        <div class="col-12 col-md-6 d-flex justify-content-center login-section">
            <div class="login-box mt-2 object" data-value="2" style="max-width: 400px;">
                <div class="card-header d-flex">
                    <button class="btn btn-primary flex-grow-1 me-2">Log In</button>
                    <button class="btn btn-outline-primary flex-grow-1" @onclick="SignupTab">Sign Up</button>
                </div>
                <div class="card-body">
                    <form @onsubmit="Submit">
                        <input type="text" class="form-control mb-3" placeholder="Username" @bind-value="Username" aria-label="Enter username">
                        <input type="password" class="form-control mb-3" placeholder="Password" @bind-value="Password" aria-label="Enter password">

                        <!-- Remember me button, needs additional code-->
                        <div class="d-flex align-items-center mb-3">
                            <input type="checkbox" class="form-check-input me-2" @bind="StayLoggedIn" id="rememberMe" aria-label="Remember me">
                            <label for="rememberMe" class="form-check-label">Remember My Details</label>
                        </div>

                        <button type="submit" class="btn btn-primary w-100" aria-label="Log in">Log In</button>

                        <!-- Forgot password button needs linking to the form-->
                        <a href="#" class="d-block text-center mt-3" aria-label="Forgot password" @onclick="ResetPassword">Forgot Password?</a>
                    </form>
                </div>
            </div>
        </div>
        <!-- Info section -->
        <div class="row d-flex justify-content-center align-items-center half-height">
            <div class="col-12 col-md-8 d-flex flex-column justify-content-center align-items-center info-section">
                <h1 class="bright-title">Improve Your Workflow</h1>
                <p class="bottom-box-text">This feedback tracking tool allows anyone to plan and prioritize their tasks according to their needs.</p>
                <ul class="features-list">
                    <li>Real-time feedback tracking</li>
                    <li>Direct communication with lecturers</li>
                    <li>Accessible anytime, anywhere!</li>
                </ul>
            </div>
        </div>
    </div>
</div>

<!-- Animation! Thanks to: https://www.youtube.com/watch?v=ntg6tbGxP3k -->
<script type="text/javascript">
        document.addEventListener("mousemove", parallax);
        function parallax(e) {
        document.querySelectorAll(".object").forEach(function(move) {
        var moving_value = move.getAttribute("data-value");
        var x = (e.clientX * moving_value) / 250;
        var y = (e.clientY * moving_value) / 250;
        move.style.transform = "translateX(" + x + "px) translateY(" + y + "px)";});
    }
</script>
<!-- Function to navigate users to the signup tab -->
@code {
    private void SignupTab()
    {
        NavigationManager.NavigateTo("/SignUp");
    }

    private void ResetPassword()
    {
        NavigationManager.NavigateTo("/ResetPassword");
    }
}

