@page "/settings"
@rendermode InteractiveServer
@inject JAuth JAuth
@using Application.API
@using FeedbackTrackerCommon.Definitions

@*

The 2FA Code was making the browser crash. Commented it but it's still there. Commented the button and replaced with dummy button until the 2FA works

*@

<div class="settings">
    <h3>Settings</h3>
    <div class="settings-container">
        <!-- Left side: Categories -->
        <div class="categories">
            <ul>
                <li>General</li>
                <li>Privacy</li>
                <li>Notifications</li>
                <li>Account</li>
            </ul>
        </div>

        <!-- Right Side: Options -->
        <div class="options">
            <div class="option">
                <button type="submit" class="sett btn-primary" style="width: 30%;" aria-label="2FA">2FA</button>
                <!--<h4><button type="button" @onclick="Click2FA" disabled="@isDisabled">@MFAButtonText</button></h4>-->
                <label for="first-option">Example Setting</label>
                <select id="first-option">
                    <option>Option 1</option>
                    <option>Option 2</option>
                </select>
            </div>
        </div>
    </div>
</div>

@*
@code {
    public bool isDisabled = false;
    private string MFAButtonText = "Enable 2fa";
    public async void Click2FA()
    {
        UserAPI API = new UserAPI();
        await API.Enable2FA(JAuth.User.UserID.ToString(), JAuth.User.Password);
        JAuth.User = await API.GetUserByID(JAuth.User.UserID);
        isDisabled = true;
        MFAButtonText = "2FA Enabled, your code is: " + JAuth.User.MFASecret;

    }

        
    protected override async Task OnInitializedAsync()
    {
        if (JAuth.User.MFASecret != null)
        {
            MFAButtonText = "2FA Enabled, your code is: " + JAuth.User.MFASecret;
            isDisabled = true;

        }
    }
}
*@


