@page "/usersfeedback"
@using Application.API
@inject FeedbackAPI FeedbackClientAccess
@inject JAuth JAuth
@inject NavigationManager NavigationManager
@rendermode InteractiveServer
@inject FeedbackAPI FeedbackCLient
@inject ModuleAPI ModuleClient
@inject UserAPI UserCLient
@inject NavigationManager NavigationManager

<title>TSE Feedback: Your Feedback</title>

@if (JAuth.IsAuthorised())
{
    <center><h1>Your Feedback</h1></center>
@if (SelectedFeedbacks != null && SelectedFeedbacks.Any())
{
    foreach (var feedback in SelectedFeedbacks)
    {
        <p><strong>Title:</strong> @feedback.Title</p>
        <p><strong>Description:</strong> @feedback.FeedbackText</p>
        <NavLink class="btn btn-primary" href="@($"/viewfeedback/{feedback.FeedbackID}")">View</NavLink>
    }
}
else
{
    <center><p>No feedback to view!</p></center>
}
}
//For users that aren't logged in
else
{
    <style>
        body {
            overflow: hidden;
        }
    </style>
    <div class="loggedout">
        <div class="loggedout-msg">
            <img src="/Images/LoginCone.png" alt="Login Required" class="cone-img">
            <h3>Please log in to access the feedback form.</h3>
            <button class="btn btn-loggedout" @onclick=HomeButton>Return Home</button>
        </div>
    </div>
}


@code {  
    private void HomeButton()
    {
        NavigationManager.NavigateTo("/LogIn");
    }

    private List<FeedbackTrackerCommon.Definitions.Feedback> SelectedFeedbacks;

    private async Task LoadAllFeedback(int ID)
    {
        var feedbacks = await FeedbackClientAccess.GetAssignedFeedbacks(ID);
        if (feedbacks != null)
        {
            SelectedFeedbacks = feedbacks;
        }
        else
        {
            Console.WriteLine("Failed to load feedback.");
        }
    }

    protected override async Task OnInitializedAsync()
    {
        if (JAuth.IsAuthorised())
        {
            await LoadAllFeedback(JAuth.User.UserID);
        }
    }
}